{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,SAAS,IAGX,MAAMC,EAASC,SAASC,cAAc,SACtC,IAAIC,EAAa,KACbC,EAAY,KACZC,EAAS,KAqBb,SAASC,IACPH,EAAaI,OAAOP,EAAOQ,SAASC,MAAMC,OAE1CN,EAAYG,OAAOP,EAAOQ,SAASG,KAAKD,OAExCL,EAASE,OAAOP,EAAOQ,SAASI,OAAOF,M,CAMlB,SAAdG,EAAcC,EAAUL,GAC/B,MAAMM,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EAEFI,EAAQ,uBAAqBL,QAAiBL,OAG9CW,EAAO,sBAAoBN,QAAeL,MAAU,GAErDA,EAAM,IAGHa,MAAKZ,IACbd,EAAAF,GAASG,OAAO0B,QAAQb,EAAM,IAC7Bc,OAAMC,IACP7B,EAAAF,GAASG,OAAO6B,QAAQD,EAAM,G,CA/ChCnB,IAG+BN,EAAxB2B,iBAAiB,UAExB,SAA0BC,GACxBA,EAAMC,iBAEN,IAAIpB,EAAQN,EACZ,IAAK,IAAIW,EAAW,EAAGA,GAAYT,EAAQS,GAAY,EACrDD,EAAcC,EAAUL,GACxBA,GAASL,C,IAMoBJ,EAA1B2B,iBAAiB,SAAUrB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nNotiflix.Notify.init({\n  useIcon: false,\n});\n\nconst formEl = document.querySelector('.form');\nlet firstDelay = null;\nlet delayStep = null;\nlet amount = null;\n\nformData();\n\n// події при натисканні кнопки сабміту-------------------------\nformEl.addEventListener('submit', onSubmitBtnClick);\n\nfunction onSubmitBtnClick(event) {\n  event.preventDefault(); \n\n  let delay = firstDelay;\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay);\n    delay += delayStep;\n  }  \n}\n//-------------------------------------------------------------\n\n// відслідковую введені дані в поля форми----------------------\nformEl.addEventListener('change', formData);\n\nfunction formData() {\n  firstDelay = Number(formEl.elements.delay.value);\n  \n  delayStep = Number(formEl.elements.step.value);\n  \n  amount = Number(formEl.elements.amount.value);\n}\n//-------------------------------------------------------------\n\n\n// функція створення промісу-----------------------------------\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n\n  promise.then(value => {\n  Notiflix.Notify.success(value);\n}).catch(error => {\n  Notiflix.Notify.failure(error);\n});\n}\n//-------------------------------------------------------------\n"],"names":["$7Y9D8","parcelRequire","$parcel$interopDefault","Notify","init","useIcon","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$formData","Number","elements","delay","value","step","amount","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","success","catch","error","failure","addEventListener","event","preventDefault"],"version":3,"file":"03-promises.ae84312e.js.map"}